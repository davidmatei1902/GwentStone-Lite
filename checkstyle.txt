Starting audit...
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\characters\hero\Hero.java:11:17: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\characters\hero\Hero.java:15:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'createOutputWrapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'createOutputWrapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\characters\hero\Hero.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\fileio\CardInput.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\fileio\DecksInput.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\events\AttackEvent.java:9:24: Parameter attacker should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\events\AttackEvent.java:9:39: Parameter attacked should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\events\EventsHandler.java:8:5: Class 'EventsHandler' looks like designed for extension (can be subclassed), but the method 'handleAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EventsHandler' final or making the method 'handleAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\events\EventsHandler.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:156:5: Class 'GamePlay' looks like designed for extension (can be subclassed), but the method 'getPlayerMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GamePlay' final or making the method 'getPlayerMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:156:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:168:45: 'board' hides a field. [HiddenField]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:227:5: Class 'GamePlay' looks like designed for extension (can be subclassed), but the method 'cardUsesAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GamePlay' final or making the method 'cardUsesAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:227:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:255:5: Class 'GamePlay' looks like designed for extension (can be subclassed), but the method 'getCardAtPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GamePlay' final or making the method 'getCardAtPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:255:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:255:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:256:5: '{' at column 5 should be on the previous line. [LeftCurly]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:263:47: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:264:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:265:9: '{' at column 9 should be on the previous line. [LeftCurly]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:266:36: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:272:32: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:276: Line is longer than 100 characters (found 144). [LineLength]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:299: Line is longer than 100 characters (found 144). [LineLength]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:360:47: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\GamePlay.java:379:40: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:3:17: Using the '.*' form of import should be avoided - resources.*. [AvoidStarImport]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:14:27: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:26:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'incrementManaBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'incrementManaBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:26:33: Parameter amount should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:30:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'decreaseManaBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'decreaseManaBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:30:32: Parameter amount should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:31:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:36:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:40:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:40:33: Parameter playerNumber should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:44:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:48:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:48:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:52:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:56:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:56:32: Parameter gamesPlayed should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:60:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:64:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:64:29: Parameter gamesWon should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:68:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesLost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesLost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:72:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesLost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesLost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:72:30: Parameter gamesLost should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:76:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:80:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:80:31: Parameter playerHand should be final. [FinalParameters]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:84:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'unFreezeCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'unFreezeCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:84:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\gameplay\Player.java:84:42: 'playerHand' hides a field. [HiddenField]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\main\Main.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:28:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:32:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:36:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getHandIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getHandIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:40:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setHandIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setHandIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:44:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCardAttacker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCardAttacker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:48:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCardAttacker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCardAttacker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:52:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCardAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCardAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:56:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCardAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCardAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:60:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getAffectedRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getAffectedRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:64:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setAffectedRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setAffectedRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:68:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:72:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:76:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:80:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:84:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Actions.java:88:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Board.java:22:5: Class 'Board' looks like designed for extension (can be subclassed), but the method 'getAtPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Board' final or making the method 'getAtPos' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Board.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Board.java:33:5: Class 'Board' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Board' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Board.java:37:5: Class 'Board' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Board' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Board.java:41:5: Class 'Board' looks like designed for extension (can be subclassed), but the method 'getMaxColums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Board' final or making the method 'getMaxColums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:32:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getFrozenStatus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getFrozenStatus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:36:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setFrozenStatus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setFrozenStatus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:62:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'createOutputWrapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'createOutputWrapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:157:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:161:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:165:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:169:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:173:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:177:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:181:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:185:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:189:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:193:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:197:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:201:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Card.java:205:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:13: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:51:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:55:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:59:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:63:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:67:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:80:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Decks.java:84:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Game.java:24:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getStartGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getStartGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Game.java:28:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setStartGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setStartGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Game.java:32:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Game.java:36:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Game.java:40:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Hand.java:12:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Hand.java:31:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'removeCardAtIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'removeCardAtIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Hand.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Hand.java:46:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:15: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:31:5: Class 'MainGame' looks like designed for extension (can be subclassed), but the method 'getPlayerOneDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MainGame' final or making the method 'getPlayerOneDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:35:5: Class 'MainGame' looks like designed for extension (can be subclassed), but the method 'setPlayerOneDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MainGame' final or making the method 'setPlayerOneDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:39:5: Class 'MainGame' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MainGame' final or making the method 'getPlayerTwoDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:43:5: Class 'MainGame' looks like designed for extension (can be subclassed), but the method 'setPlayerTwoDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MainGame' final or making the method 'setPlayerTwoDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:47:5: Class 'MainGame' looks like designed for extension (can be subclassed), but the method 'getGames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MainGame' final or making the method 'getGames' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:51:5: Class 'MainGame' looks like designed for extension (can be subclassed), but the method 'setGames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MainGame' final or making the method 'setGames' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\MainGame.java:55:5: Class 'MainGame' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MainGame' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:24:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'isStartOfRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'isStartOfRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:28:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getMaxRoundsNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getMaxRoundsNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:32:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getCurrentPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getCurrentPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:36:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'setCurrentPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'setCurrentPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:40:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoHasEndedHisTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getPlayerTwoHasEndedHisTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:44:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'setPlayerTwoHasEndedHisTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'setPlayerTwoHasEndedHisTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:48:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getPlayerOneHasEndedHisTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getPlayerOneHasEndedHisTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:52:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'setPlayerOneHasEndedHisTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'setPlayerOneHasEndedHisTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:56:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'setCurrentRoundNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'setCurrentRoundNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:60:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'setPlayerTwoTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'setPlayerTwoTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:64:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'setPlayerOneTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'setPlayerOneTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:68:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getPlayerOneTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getPlayerOneTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:72:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getPlayerTwoTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\Round.java:76:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getCurrentRoundNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getCurrentRoundNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:23:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerOneDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerOneDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:27:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerOneDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerOneDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:31:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerTwoDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:35:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerTwoDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerTwoDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:39:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getShuffleSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getShuffleSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:43:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setShuffleSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setShuffleSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:47:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerOneHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerOneHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:51:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerOneHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerOneHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:55:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerTwoHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:59:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerTwoHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerTwoHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:63:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getStartingPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getStartingPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:67:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setStartingPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setStartingPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Desktop\An 2\Semestrul 1\POO\teme grele\GwentStone\.\src\resources\StartGame.java:71:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 151 errors.
